### YamlMime:ManagedReference
items:
- uid: VRSketchingGeometry.Meshing.TubeMesh
  commentId: T:VRSketchingGeometry.Meshing.TubeMesh
  id: TubeMesh
  parent: VRSketchingGeometry.Meshing
  children:
  - VRSketchingGeometry.Meshing.TubeMesh.#ctor(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,System.Boolean)
  - VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale
  - VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Int32)
  - VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  - VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection
  - VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Int32)
  - VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  - VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  - VRSketchingGeometry.Meshing.TubeMesh.TransformNormals(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3)
  - VRSketchingGeometry.Meshing.TubeMesh.TransformPoints(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)
  langs:
  - csharp
  - vb
  name: TubeMesh
  nameWithType: TubeMesh
  fullName: VRSketchingGeometry.Meshing.TubeMesh
  type: Class
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: TubeMesh
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 18
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nGenerates a tube like mesh according to a set of points on a line\n"
  remarks: "Original author: tterpi\nThis class was originally called LineExtruder. \nIt was renamed to make it consistant with the other mesh classes such as PatchMesh and RibbonMesh.\n"
  example: []
  syntax:
    content: 'public class TubeMesh : ITubeMesh'
    content.vb: >-
      Public Class TubeMesh

          Implements ITubeMesh
  inheritance:
  - System.Object
  implements:
  - VRSketchingGeometry.Meshing.ITubeMesh
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale
  commentId: P:VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale
  id: CrossSectionScale
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: CrossSectionScale
  nameWithType: TubeMesh.CrossSectionScale
  fullName: VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale
  type: Property
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: CrossSectionScale
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 21
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  syntax:
    content: public Vector3 CrossSectionScale { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3
    content.vb: Public ReadOnly Property CrossSectionScale As Vector3
  overload: VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRSketchingGeometry.Meshing.TubeMesh.TransformPoints(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.TransformPoints(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)
  id: TransformPoints(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: TransformPoints(List<Vector3>, Vector3, Vector3, Vector3)
  nameWithType: TubeMesh.TransformPoints(List<Vector3>, Vector3, Vector3, Vector3)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.TransformPoints(System.Collections.Generic.List<UnityEngine.Vector3>, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: TransformPoints
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 43
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nTransform the points of a cross section for example.\n"
  example: []
  syntax:
    content: public static List<Vector3> TransformPoints(List<Vector3> points, Vector3 position, Vector3 tangent, Vector3 scale)
    parameters:
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: List of points to transform.
    - id: position
      type: UnityEngine.Vector3
      description: Position of the origin of the points.
    - id: tangent
      type: UnityEngine.Vector3
      description: Tangent to the spline at position.
    - id: scale
      type: UnityEngine.Vector3
      description: ''
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    content.vb: Public Shared Function TransformPoints(points As List(Of Vector3), position As Vector3, tangent As Vector3, scale As Vector3) As List(Of Vector3)
  overload: VRSketchingGeometry.Meshing.TubeMesh.TransformPoints*
  nameWithType.vb: TubeMesh.TransformPoints(List(Of Vector3), Vector3, Vector3, Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.TransformPoints(System.Collections.Generic.List(Of UnityEngine.Vector3), UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3)
  name.vb: TransformPoints(List(Of Vector3), Vector3, Vector3, Vector3)
- uid: VRSketchingGeometry.Meshing.TubeMesh.TransformNormals(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.TransformNormals(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3)
  id: TransformNormals(System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3)
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: TransformNormals(List<Vector3>, Vector3)
  nameWithType: TubeMesh.TransformNormals(List<Vector3>, Vector3)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.TransformNormals(System.Collections.Generic.List<UnityEngine.Vector3>, UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: TransformNormals
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 64
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nTransform a list of normals.\n"
  example: []
  syntax:
    content: public static List<Vector3> TransformNormals(List<Vector3> normals, Vector3 tangent)
    parameters:
    - id: normals
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: tangent
      type: UnityEngine.Vector3
      description: ''
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    content.vb: Public Shared Function TransformNormals(normals As List(Of Vector3), tangent As Vector3) As List(Of Vector3)
  overload: VRSketchingGeometry.Meshing.TubeMesh.TransformNormals*
  nameWithType.vb: TubeMesh.TransformNormals(List(Of Vector3), Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.TransformNormals(System.Collections.Generic.List(Of UnityEngine.Vector3), UnityEngine.Vector3)
  name.vb: TransformNormals(List(Of Vector3), Vector3)
- uid: VRSketchingGeometry.Meshing.TubeMesh.#ctor(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,System.Boolean)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.#ctor(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,System.Boolean)
  id: '#ctor(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},UnityEngine.Vector3,System.Boolean)'
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: TubeMesh(List<Vector3>, List<Vector3>, Vector3, Boolean)
  nameWithType: TubeMesh.TubeMesh(List<Vector3>, List<Vector3>, Vector3, Boolean)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.TubeMesh(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Vector3>, UnityEngine.Vector3, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: .ctor
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 86
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nConstructor for a TubeMesh object.\n"
  example: []
  syntax:
    content: public TubeMesh(List<Vector3> crossSectionShape, List<Vector3> crossSectionNormals, Vector3 crossSectionScale, bool generateCaps = true)
    parameters:
    - id: crossSectionShape
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: Vertices of the cross section.
    - id: crossSectionNormals
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: Normals of the cross section.
    - id: crossSectionScale
      type: UnityEngine.Vector3
      description: Scale of the cross section.
    - id: generateCaps
      type: System.Boolean
      description: Should the holes at the end of the tube be closed.
    content.vb: Public Sub New(crossSectionShape As List(Of Vector3), crossSectionNormals As List(Of Vector3), crossSectionScale As Vector3, generateCaps As Boolean = True)
  overload: VRSketchingGeometry.Meshing.TubeMesh.#ctor*
  nameWithType.vb: TubeMesh.TubeMesh(List(Of Vector3), List(Of Vector3), Vector3, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.TubeMesh(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Vector3), UnityEngine.Vector3, System.Boolean)
  name.vb: TubeMesh(List(Of Vector3), List(Of Vector3), Vector3, Boolean)
- uid: VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  id: SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: SetCrossSection(List<Vector3>, CrossSection)
  nameWithType: TubeMesh.SetCrossSection(List<Vector3>, CrossSection)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection(System.Collections.Generic.List<UnityEngine.Vector3>, VRSketchingGeometry.Meshing.CrossSection)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: SetCrossSection
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 104
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nChange the cross section used for generating the tube mesh.\n"
  remarks: Points have to be provided because this class does not keep a copy of the interpolated points.
  example: []
  syntax:
    content: public Mesh SetCrossSection(List<Vector3> points, CrossSection crossSection)
    parameters:
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: crossSection
      type: VRSketchingGeometry.Meshing.CrossSection
      description: ''
    return:
      type: UnityEngine.Mesh
      description: ''
    content.vb: Public Function SetCrossSection(points As List(Of Vector3), crossSection As CrossSection) As Mesh
  overload: VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection*
  implements:
  - VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  nameWithType.vb: TubeMesh.SetCrossSection(List(Of Vector3), CrossSection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection(System.Collections.Generic.List(Of UnityEngine.Vector3), VRSketchingGeometry.Meshing.CrossSection)
  name.vb: SetCrossSection(List(Of Vector3), CrossSection)
- uid: VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection
  id: GetCrossSection
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: GetCrossSection()
  nameWithType: TubeMesh.GetCrossSection()
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection()
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: GetCrossSection
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 119
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nGet a copy of the cross section currently in use.\n"
  example: []
  syntax:
    content: public CrossSection GetCrossSection()
    return:
      type: VRSketchingGeometry.Meshing.CrossSection
      description: ''
    content.vb: Public Function GetCrossSection As CrossSection
  overload: VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection*
  implements:
  - VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  id: GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: GenerateMesh(List<Vector3>)
  nameWithType: TubeMesh.GenerateMesh(List<Vector3>)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List<UnityEngine.Vector3>)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: GenerateMesh
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 138
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nRegenerate the whole mesh with the given points.\n"
  example: []
  syntax:
    content: public Mesh GenerateMesh(List<Vector3> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    return:
      type: UnityEngine.Mesh
      description: ''
    content.vb: Public Function GenerateMesh(points As List(Of Vector3)) As Mesh
  overload: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh*
  implements:
  - VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  nameWithType.vb: TubeMesh.GenerateMesh(List(Of Vector3))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List(Of UnityEngine.Vector3))
  name.vb: GenerateMesh(List(Of Vector3))
- uid: VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  id: ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: ReplacePoints(List<Vector3>, Int32, Int32, Int32)
  nameWithType: TubeMesh.ReplacePoints(List<Vector3>, Int32, Int32, Int32)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints(System.Collections.Generic.List<UnityEngine.Vector3>, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: ReplacePoints
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 155
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nReplaces and/or removes points from an existing mesh.\nThis should only be called when <xref href=\"VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List%7bUnityEngine.Vector3%7d)\" data-throw-if-not-resolved=\"false\"></xref> was called before at least once.\nDifferent from <xref href=\"VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List%7bUnityEngine.Vector3%7d)\" data-throw-if-not-resolved=\"false\"></xref> this will only recalculate the parts that were changed according to the parameters.\n"
  example: []
  syntax:
    content: public Mesh ReplacePoints(List<Vector3> points, int index, int addCount, int removeCount)
    parameters:
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: All points of the complete line.
    - id: index
      type: System.Int32
      description: First point to be added or removed.
    - id: addCount
      type: System.Int32
      description: Number of points to add at index.
    - id: removeCount
      type: System.Int32
      description: Number of points to remove at index before adding the new ones.
    return:
      type: UnityEngine.Mesh
      description: ''
    content.vb: Public Function ReplacePoints(points As List(Of Vector3), index As Integer, addCount As Integer, removeCount As Integer) As Mesh
  overload: VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints*
  implements:
  - VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  nameWithType.vb: TubeMesh.ReplacePoints(List(Of Vector3), Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Int32, System.Int32, System.Int32)
  name.vb: ReplacePoints(List(Of Vector3), Int32, Int32, Int32)
- uid: VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Int32)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Int32)
  id: GenerateCapsMesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Int32)
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: GenerateCapsMesh(List<Vector3>, List<Vector3>, Int32)
  nameWithType: TubeMesh.GenerateCapsMesh(List<Vector3>, List<Vector3>, Int32)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Vector3>, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: GenerateCapsMesh
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 274
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nGenerate the mesh for the end caps that close the holes at the end of the tube.\n"
  example: []
  syntax:
    content: public static (List<Vector3>, List<Vector3>, List<int>) GenerateCapsMesh(List<Vector3> firstCrossSectionVertices, List<Vector3> lastCrossSectionVertices, int firstTriangleIndex)
    parameters:
    - id: firstCrossSectionVertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: lastCrossSectionVertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: firstTriangleIndex
      type: System.Int32
      description: ''
    return:
      type: System.ValueTuple{System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32}}
      description: Vertices, normals, triangles.
    content.vb: Public Shared Function GenerateCapsMesh(firstCrossSectionVertices As List(Of Vector3), lastCrossSectionVertices As List(Of Vector3), firstTriangleIndex As Integer) As(List(Of Vector3), List(Of Vector3), List(Of Integer))(Of List(Of Vector3)
  overload: VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh*
  nameWithType.vb: TubeMesh.GenerateCapsMesh(List(Of Vector3), List(Of Vector3), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Vector3), System.Int32)
  name.vb: GenerateCapsMesh(List(Of Vector3), List(Of Vector3), Int32)
- uid: VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Int32)
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Int32)
  id: GetMeshWithCaps(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},System.Int32)
  parent: VRSketchingGeometry.Meshing.TubeMesh
  langs:
  - csharp
  - vb
  name: GetMeshWithCaps(List<Vector3>, List<Vector3>, List<Int32>, List<Vector3>, List<Vector3>, List<Int32>, Int32)
  nameWithType: TubeMesh.GetMeshWithCaps(List<Vector3>, List<Vector3>, List<Int32>, List<Vector3>, List<Vector3>, List<Int32>, Int32)
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Int32>, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
      branch: fix/DocFXIntegration
      repo: git@github.com:hunsri/VRSketchingGeometry.git
    id: GetMeshWithCaps
    path: Assets/VRSketchingGeometryPackage/Runtime/ModelingKernel/TubeMesh.cs
    startLine: 341
  assemblies:
  - HTWBerlin.FKI.VRSketchingGeometry.Runtime
  namespace: VRSketchingGeometry.Meshing
  summary: "\nPut all parts of the mesh together in a Mesh object.\n"
  example: []
  syntax:
    content: public static Mesh GetMeshWithCaps(List<Vector3> vertices, List<Vector3> normals, List<int> triangles, List<Vector3> capVertices, List<Vector3> capNormals, List<int> capTriangles, int crossSectionVertexCount)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: normals
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: triangles
      type: System.Collections.Generic.List{System.Int32}
      description: ''
    - id: capVertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: capNormals
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: ''
    - id: capTriangles
      type: System.Collections.Generic.List{System.Int32}
      description: ''
    - id: crossSectionVertexCount
      type: System.Int32
      description: ''
    return:
      type: UnityEngine.Mesh
      description: ''
    content.vb: Public Shared Function GetMeshWithCaps(vertices As List(Of Vector3), normals As List(Of Vector3), triangles As List(Of Integer), capVertices As List(Of Vector3), capNormals As List(Of Vector3), capTriangles As List(Of Integer), crossSectionVertexCount As Integer) As Mesh
  overload: VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps*
  nameWithType.vb: TubeMesh.GetMeshWithCaps(List(Of Vector3), List(Of Vector3), List(Of Int32), List(Of Vector3), List(Of Vector3), List(Of Int32), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Int32), System.Int32)
  name.vb: GetMeshWithCaps(List(Of Vector3), List(Of Vector3), List(Of Int32), List(Of Vector3), List(Of Vector3), List(Of Int32), Int32)
references:
- uid: VRSketchingGeometry.Meshing
  commentId: N:VRSketchingGeometry.Meshing
  name: VRSketchingGeometry.Meshing
  nameWithType: VRSketchingGeometry.Meshing
  fullName: VRSketchingGeometry.Meshing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRSketchingGeometry.Meshing.ITubeMesh
  commentId: T:VRSketchingGeometry.Meshing.ITubeMesh
  parent: VRSketchingGeometry.Meshing
  name: ITubeMesh
  nameWithType: ITubeMesh
  fullName: VRSketchingGeometry.Meshing.ITubeMesh
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale
  name: CrossSectionScale
  nameWithType: TubeMesh.CrossSectionScale
  fullName: VRSketchingGeometry.Meshing.TubeMesh.CrossSectionScale
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRSketchingGeometry.Meshing.TubeMesh.TransformPoints*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.TransformPoints
  name: TransformPoints
  nameWithType: TubeMesh.TransformPoints
  fullName: VRSketchingGeometry.Meshing.TubeMesh.TransformPoints
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRSketchingGeometry.Meshing.TubeMesh.TransformNormals*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.TransformNormals
  name: TransformNormals
  nameWithType: TubeMesh.TransformNormals
  fullName: VRSketchingGeometry.Meshing.TubeMesh.TransformNormals
- uid: VRSketchingGeometry.Meshing.TubeMesh.#ctor*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.#ctor
  name: TubeMesh
  nameWithType: TubeMesh.TubeMesh
  fullName: VRSketchingGeometry.Meshing.TubeMesh.TubeMesh
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection
  name: SetCrossSection
  nameWithType: TubeMesh.SetCrossSection
  fullName: VRSketchingGeometry.Meshing.TubeMesh.SetCrossSection
- uid: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  commentId: M:VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
  parent: VRSketchingGeometry.Meshing.ITubeMesh
  isExternal: true
  name: SetCrossSection(List<Vector3>, CrossSection)
  nameWithType: ITubeMesh.SetCrossSection(List<Vector3>, CrossSection)
  fullName: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List<UnityEngine.Vector3>, VRSketchingGeometry.Meshing.CrossSection)
  nameWithType.vb: ITubeMesh.SetCrossSection(List(Of Vector3), CrossSection)
  fullName.vb: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List(Of UnityEngine.Vector3), VRSketchingGeometry.Meshing.CrossSection)
  name.vb: SetCrossSection(List(Of Vector3), CrossSection)
  spec.csharp:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
    name: SetCrossSection
    nameWithType: ITubeMesh.SetCrossSection
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRSketchingGeometry.Meshing.CrossSection
    name: CrossSection
    nameWithType: CrossSection
    fullName: VRSketchingGeometry.Meshing.CrossSection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection(System.Collections.Generic.List{UnityEngine.Vector3},VRSketchingGeometry.Meshing.CrossSection)
    name: SetCrossSection
    nameWithType: ITubeMesh.SetCrossSection
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.SetCrossSection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRSketchingGeometry.Meshing.CrossSection
    name: CrossSection
    nameWithType: CrossSection
    fullName: VRSketchingGeometry.Meshing.CrossSection
  - name: )
    nameWithType: )
    fullName: )
- uid: VRSketchingGeometry.Meshing.CrossSection
  commentId: T:VRSketchingGeometry.Meshing.CrossSection
  parent: VRSketchingGeometry.Meshing
  name: CrossSection
  nameWithType: CrossSection
  fullName: VRSketchingGeometry.Meshing.CrossSection
- uid: UnityEngine.Mesh
  commentId: T:UnityEngine.Mesh
  parent: UnityEngine
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: UnityEngine.Mesh
- uid: VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection
  name: GetCrossSection
  nameWithType: TubeMesh.GetCrossSection
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GetCrossSection
- uid: VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
  commentId: M:VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
  parent: VRSketchingGeometry.Meshing.ITubeMesh
  name: GetCrossSection()
  nameWithType: ITubeMesh.GetCrossSection()
  fullName: VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection()
  spec.csharp:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
    name: GetCrossSection
    nameWithType: ITubeMesh.GetCrossSection
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
    name: GetCrossSection
    nameWithType: ITubeMesh.GetCrossSection
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.GetCrossSection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh
  name: GenerateMesh
  nameWithType: TubeMesh.GenerateMesh
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh
- uid: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  commentId: M:VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  parent: VRSketchingGeometry.Meshing.ITubeMesh
  isExternal: true
  name: GenerateMesh(List<Vector3>)
  nameWithType: ITubeMesh.GenerateMesh(List<Vector3>)
  fullName: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List<UnityEngine.Vector3>)
  nameWithType.vb: ITubeMesh.GenerateMesh(List(Of Vector3))
  fullName.vb: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List(Of UnityEngine.Vector3))
  name.vb: GenerateMesh(List(Of Vector3))
  spec.csharp:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
    name: GenerateMesh
    nameWithType: ITubeMesh.GenerateMesh
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
    name: GenerateMesh
    nameWithType: ITubeMesh.GenerateMesh
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.GenerateMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  commentId: M:VRSketchingGeometry.Meshing.TubeMesh.GenerateMesh(System.Collections.Generic.List{UnityEngine.Vector3})
  isExternal: true
- uid: VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints
  name: ReplacePoints
  nameWithType: TubeMesh.ReplacePoints
  fullName: VRSketchingGeometry.Meshing.TubeMesh.ReplacePoints
- uid: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  commentId: M:VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
  parent: VRSketchingGeometry.Meshing.ITubeMesh
  isExternal: true
  name: ReplacePoints(List<Vector3>, Int32, Int32, Int32)
  nameWithType: ITubeMesh.ReplacePoints(List<Vector3>, Int32, Int32, Int32)
  fullName: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List<UnityEngine.Vector3>, System.Int32, System.Int32, System.Int32)
  nameWithType.vb: ITubeMesh.ReplacePoints(List(Of Vector3), Int32, Int32, Int32)
  fullName.vb: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Int32, System.Int32, System.Int32)
  name.vb: ReplacePoints(List(Of Vector3), Int32, Int32, Int32)
  spec.csharp:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
    name: ReplacePoints
    nameWithType: ITubeMesh.ReplacePoints
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints(System.Collections.Generic.List{UnityEngine.Vector3},System.Int32,System.Int32,System.Int32)
    name: ReplacePoints
    nameWithType: ITubeMesh.ReplacePoints
    fullName: VRSketchingGeometry.Meshing.ITubeMesh.ReplacePoints
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh
  name: GenerateCapsMesh
  nameWithType: TubeMesh.GenerateCapsMesh
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GenerateCapsMesh
- uid: System.ValueTuple{System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32}}
  commentId: T:System.ValueTuple{System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32}}
  parent: System
  definition: System.ValueTuple`3
  name: (T1, T2, T3)<List<Vector3>, List<Vector3>, List<Int32>>
  nameWithType: (T1, T2, T3)<List<Vector3>, List<Vector3>, List<Int32>>
  fullName: System.ValueTuple<System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Int32>>
  nameWithType.vb: (T1, T2, T3)(Of List(Of Vector3), List(Of Vector3), List(Of Int32))
  fullName.vb: System.ValueTuple(Of System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Int32))
  name.vb: (T1, T2, T3)(Of List(Of Vector3), List(Of Vector3), List(Of Int32))
  spec.csharp:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  isExternal: true
  name: (T1, T2, T3)<T1, T2, T3>
  nameWithType: (T1, T2, T3)<T1, T2, T3>
  fullName: System.ValueTuple<T1, T2, T3>
  nameWithType.vb: (T1, T2, T3)(Of T1, T2, T3)
  fullName.vb: System.ValueTuple(Of T1, T2, T3)
  name.vb: (T1, T2, T3)(Of T1, T2, T3)
  spec.csharp:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps*
  commentId: Overload:VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps
  name: GetMeshWithCaps
  nameWithType: TubeMesh.GetMeshWithCaps
  fullName: VRSketchingGeometry.Meshing.TubeMesh.GetMeshWithCaps
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
